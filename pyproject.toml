[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "media-renamer"
version = "1.0.0"
description = "A tool to rename movie and TV show files using metadata from TVDB and TMDB"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: System :: Filesystems",
    "Topic :: Utilities",
]
dependencies = [
    "requests>=2.28.0",
    "python-dotenv>=1.0.0",
    "click>=8.0.0",
    "guessit>=3.4.0",
    "pymediainfo>=6.0.0",
    "pydantic>=2.0.0",
    "python-dateutil>=2.8.0",
    "rich>=13.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/media-renamer"
Repository = "https://github.com/yourusername/media-renamer"
Issues = "https://github.com/yourusername/media-renamer/issues"

[project.scripts]
media-renamer = "media_renamer.cli:main"

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["media_renamer"]

[tool.hatch.build.targets.sdist]
include = [
    "/media_renamer",
    "/README.md",
    "/pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=media_renamer --cov-report=html --cov-report=term-missing"